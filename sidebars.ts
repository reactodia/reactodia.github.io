import type { SidebarsConfig } from '@docusaurus/plugin-content-docs';

/**
 * Creating a sidebar enables you to:
 - create an ordered group of docs
 - render a sidebar for each doc of that group
 - provide next/previous navigation

 The sidebars can be generated from the filesystem, or explicitly defined here.

 Create as many sidebars as you want.
 */
type SidebarItems = Extract<SidebarsConfig[string], unknown[]>;
type SidebarCategory = SidebarItems extends (infer U)[] ? Extract<U, { type: 'category' }> : never;

const typedocItems: SidebarItems = JSON.parse(
  JSON.stringify(require('./docs/api/typedoc-sidebar.cjs')),
  function (key, value) {
    if (key === 'id' && typeof value === 'string') {
      return value.replace(/\\/g, '/');
    }
    return value;
  }
);

function findSidebarCategory(items: SidebarItems, label: string): SidebarCategory {
  return typedocItems.find((item): item is SidebarCategory =>
    typeof item === 'object' &&
    item.type === 'category' &&
    item.label === 'workspace'
  );
}

const sidebars: SidebarsConfig = {
  docs: [
    'intro',
    {
      type: 'category',
      label: 'Concepts',
      link: {
        type: 'generated-index',
      },
      items: [{type: 'autogenerated', dirName: 'concepts'}],
    },
    {
      type: 'category',
      label: 'Tutorial - Basics',
      link: {
        type: 'generated-index',
        description: '5 minutes to learn the most important Docusaurus concepts.',
      },
      items: [{type: 'autogenerated', dirName: 'tutorial-basics'}],
    },
    {
      type: 'category',
      label: 'Tutorial - Extras',
      link: {
        type: 'generated-index',
      },
      items: [{type: 'autogenerated', dirName: 'tutorial-extras'}],
    },
    {
      type: 'category',
      label: 'Examples',
      link: {
        type: 'generated-index',
      },
      items: [{type: 'autogenerated', dirName: 'examples'}],
    },
  ],

  api: [
    {
      type: 'doc',
      id: 'api/index',
      label: 'Package Modules',
    },
    {
      ...findSidebarCategory(typedocItems, 'workspace'),
      label: '@reactodia/workspace',
      collapsed: false,
    },
    {
      ...findSidebarCategory(typedocItems, 'worker-protocol'),
      label: '/worker-protocol',
    },
    {
      ...findSidebarCategory(typedocItems, 'default-layouts.worker'),
      label: '/default-layouts.worker',
    },
  ],
};

export default sidebars;
