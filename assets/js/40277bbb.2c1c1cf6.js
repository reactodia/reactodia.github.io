"use strict";(self.webpackChunk_reactodia_reactodia_github_io=self.webpackChunk_reactodia_reactodia_github_io||[]).push([[14501],{49276:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var a=n(74848),o=n(28453);const s={},r="Class Tree",c={id:"components/class-tree",title:"Class Tree",description:"ClassTree is a component to display an element type (class) tree for the workspace.",source:"@site/docs/components/class-tree.md",sourceDirName:"components",slug:"/components/class-tree",permalink:"/docs/components/class-tree",draft:!1,unlisted:!1,editUrl:"https://github.com/reactodia/reactodia.github.io/tree/main/docs/components/class-tree.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Canvas",permalink:"/docs/components/canvas"},next:{title:"Connections Menu",permalink:"/docs/components/connections-menu"}},i={},d=[];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"class-tree",children:"Class Tree"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"/docs/api/workspace/functions/ClassTree",children:"ClassTree"})," is a component to display an ",(0,a.jsx)(t.a,{href:"/docs/api/workspace/type-aliases/ElementTypeIri",children:"element type"})," (class) tree for the workspace."]}),"\n",(0,a.jsxs)(t.p,{children:["Element type graph is loaded from ",(0,a.jsx)(t.a,{href:"/docs/concepts/data-provider",children:"data provider"})," associated with the ",(0,a.jsx)(t.a,{href:"/docs/concepts/graph-model",children:"diagram model"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["In ",(0,a.jsx)(t.a,{href:"/docs/concepts/graph-authoring",children:"graph authoring"})," mode, the class tree can be used to create entity elements that are instances of the displayed types."]}),"\n",(0,a.jsx)(t.admonition,{type:"tip",children:(0,a.jsxs)(t.p,{children:["The same functionality is also available as ",(0,a.jsx)(t.code,{children:"SearchSectionElementTypes"})," ",(0,a.jsx)(t.a,{href:"/docs/components/unified-search",children:"unified search section"}),"."]})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",metastring:"live",live:!0,children:"function Example() {\r\n  const GRAPH_DATA =\r\n    'https://raw.githubusercontent.com/reactodia/reactodia-workspace/' +\r\n    'master/examples/resources/orgOntology.ttl';\r\n\r\n  const {defaultLayout} = Reactodia.useWorker(Layouts);\r\n\r\n  const {onMount} = Reactodia.useLoadedWorkspace(async ({context, signal}) => {\r\n    const {model, performLayout} = context;\r\n    const response = await fetch(GRAPH_DATA, {signal});\r\n    const graphData = new N3.Parser().parse(await response.text());\r\n    const dataProvider = new Reactodia.RdfDataProvider({acceptBlankNodes: false});\r\n    dataProvider.addGraph(graphData);\r\n    await model.createNewDiagram({dataProvider, signal});\r\n  }, []);\r\n\r\n  return (\r\n    <div className='reactodia-live-editor'>\r\n      <Reactodia.Workspace ref={onMount}\r\n        defaultLayout={defaultLayout}>\r\n          <Reactodia.WorkspaceRoot>\r\n            <Reactodia.ClassTree />\r\n          </Reactodia.WorkspaceRoot>\r\n      </Reactodia.Workspace>\r\n    </div>\r\n  );\r\n}\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var a=n(96540);const o={},s=a.createContext(o);function r(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);