"use strict";(self.webpackChunk_reactodia_reactodia_github_io=self.webpackChunk_reactodia_reactodia_github_io||[]).push([[21456],{16593:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var a=t(77810);const s={},i=a.createContext(s);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:n},e.children)}},69556:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"api/workspace/type-aliases/CanvasPointerMode","title":"Type Alias: CanvasPointerMode","description":"CanvasPointerMode = \\"panning\\" \\\\| \\"selection\\"","source":"@site/docs/api/workspace/type-aliases/CanvasPointerMode.md","sourceDirName":"api/workspace/type-aliases","slug":"/api/workspace/type-aliases/CanvasPointerMode","permalink":"/docs/api/workspace/type-aliases/CanvasPointerMode","draft":false,"unlisted":false,"editUrl":"https://github.com/reactodia/reactodia.github.io/tree/main/docs/api/workspace/type-aliases/CanvasPointerMode.md","tags":[],"version":"current","frontMatter":{},"sidebar":"api","previous":{"title":"AuthoredRelation","permalink":"/docs/api/workspace/type-aliases/AuthoredRelation"},"next":{"title":"CanvasWidgetAttachment","permalink":"/docs/api/workspace/type-aliases/CanvasWidgetAttachment"}}');var s=t(64922),i=t(16593);const o={},r="Type Alias: CanvasPointerMode",c={},d=[];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"type-alias-canvaspointermode",children:"Type Alias: CanvasPointerMode"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"CanvasPointerMode"})," = ",(0,s.jsx)(n.code,{children:'"panning"'})," | ",(0,s.jsx)(n.code,{children:'"selection"'})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/AlexeyMz/reactodia-workspace/blob/356ab81b3f74463db55a5118aa19d0298343db5f/src/diagram/canvasApi.ts#L423",children:"diagram/canvasApi.ts:423"})]}),"\n",(0,s.jsx)(n.p,{children:"Action on moving pointer with pressed main button:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"panning"})," - pans the viewport over canvas;"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"selection"})," - starts selection of the cells on canvas."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["This mode may be changed to another while ",(0,s.jsx)(n.code,{children:"Shift"})," button is being held\r\n(this should be implemented separately when the property value is used\r\nin other components)."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);