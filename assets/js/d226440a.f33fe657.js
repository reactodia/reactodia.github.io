"use strict";(self.webpackChunk_reactodia_reactodia_github_io=self.webpackChunk_reactodia_reactodia_github_io||[]).push([[69644],{16593:(e,r,s)=>{s.d(r,{R:()=>n,x:()=>i});var t=s(77810);const o={},c=t.createContext(o);function n(e){const r=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:n(e.components),t.createElement(c.Provider,{value:r},e.children)}},93701:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>a,contentTitle:()=>i,default:()=>l,frontMatter:()=>n,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api/workspace/interfaces/LoadedWorkspace","title":"Interface: LoadedWorkspace","description":"Defined in444","source":"@site/docs/api/workspace/interfaces/LoadedWorkspace.md","sourceDirName":"api/workspace/interfaces","slug":"/api/workspace/interfaces/LoadedWorkspace","permalink":"/docs/api/workspace/interfaces/LoadedWorkspace","draft":false,"unlisted":false,"editUrl":"https://github.com/reactodia/reactodia.github.io/tree/main/docs/api/workspace/interfaces/LoadedWorkspace.md","tags":[],"version":"current","frontMatter":{},"sidebar":"api","previous":{"title":"ListElementViewProps","permalink":"/docs/api/workspace/interfaces/ListElementViewProps"},"next":{"title":"LoadedWorkspaceParams","permalink":"/docs/api/workspace/interfaces/LoadedWorkspaceParams"}}');var o=s(64922),c=s(16593);const n={},i="Interface: LoadedWorkspace",a={},d=[{value:"See",id:"see",level:2},{value:"Properties",id:"properties",level:2}];function p(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"interface-loadedworkspace",children:"Interface: LoadedWorkspace"})}),"\n",(0,o.jsxs)(r.p,{children:["Defined in: ",(0,o.jsx)(r.a,{href:"https://github.com/AlexeyMz/reactodia-workspace/blob/356ab81b3f74463db55a5118aa19d0298343db5f/src/workspace/workspace.tsx#L444",children:"workspace/workspace.tsx:444"})]}),"\n",(0,o.jsx)(r.p,{children:"Result of the workspace initialization hook."}),"\n",(0,o.jsx)(r.h2,{id:"see",children:"See"}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.a,{href:"/docs/api/workspace/functions/useLoadedWorkspace",children:"useLoadedWorkspace"})}),"\n",(0,o.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,o.jsxs)("table",{children:[(0,o.jsx)("thead",{children:(0,o.jsxs)("tr",{children:[(0,o.jsx)("th",{children:"Property"}),(0,o.jsx)("th",{children:"Modifier"}),(0,o.jsx)("th",{children:"Type"}),(0,o.jsx)("th",{children:"Description"})]})}),(0,o.jsxs)("tbody",{children:[(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:(0,o.jsxs)(r.p,{children:[(0,o.jsx)("a",{id:"getcontext"})," ",(0,o.jsx)(r.code,{children:"getContext"})]})}),(0,o.jsx)("td",{children:(0,o.jsx)(r.p,{children:(0,o.jsx)(r.code,{children:"readonly"})})}),(0,o.jsx)("td",{children:(0,o.jsxs)(r.p,{children:["() => ",(0,o.jsx)(r.a,{href:"/docs/api/workspace/interfaces/WorkspaceContext",children:(0,o.jsx)(r.code,{children:"WorkspaceContext"})})]})}),(0,o.jsxs)("td",{children:[(0,o.jsx)(r.p,{children:"Returns the top-level context for the mounted workspace via the hook."}),(0,o.jsx)(r.p,{children:"Throws an error if the workspace is not mounted yet."})]})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:(0,o.jsxs)(r.p,{children:[(0,o.jsx)("a",{id:"onmount"})," ",(0,o.jsx)(r.code,{children:"onMount"})]})}),(0,o.jsx)("td",{children:(0,o.jsx)(r.p,{children:(0,o.jsx)(r.code,{children:"readonly"})})}),(0,o.jsx)("td",{children:(0,o.jsxs)(r.p,{children:["(",(0,o.jsx)(r.code,{children:"workspace"}),") => ",(0,o.jsx)(r.code,{children:"void"})]})}),(0,o.jsx)("td",{children:(0,o.jsxs)(r.p,{children:["Callback to pass as ",(0,o.jsx)(r.code,{children:"ref"})," to the top-level workspace component\r\nto perform the initialization specified in the hook."]})})]})]})]})]})}function l(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}}}]);