"use strict";(self.webpackChunk_reactodia_reactodia_github_io=self.webpackChunk_reactodia_reactodia_github_io||[]).push([[69644],{16593:(e,r,s)=>{s.d(r,{R:()=>n,x:()=>i});var t=s(77810);const c={},o=t.createContext(c);function n(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:n(e.components),t.createElement(o.Provider,{value:r},e.children)}},93701:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>a,contentTitle:()=>i,default:()=>l,frontMatter:()=>n,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api/workspace/interfaces/LoadedWorkspace","title":"Interface: LoadedWorkspace","description":"Defined in444","source":"@site/docs/api/workspace/interfaces/LoadedWorkspace.md","sourceDirName":"api/workspace/interfaces","slug":"/api/workspace/interfaces/LoadedWorkspace","permalink":"/docs/api/workspace/interfaces/LoadedWorkspace","draft":false,"unlisted":false,"editUrl":"https://github.com/reactodia/reactodia.github.io/tree/main/docs/api/workspace/interfaces/LoadedWorkspace.md","tags":[],"version":"current","frontMatter":{},"sidebar":"api","previous":{"title":"ListElementViewProps","permalink":"/docs/api/workspace/interfaces/ListElementViewProps"},"next":{"title":"LoadedWorkspaceParams","permalink":"/docs/api/workspace/interfaces/LoadedWorkspaceParams"}}');var c=s(64922),o=s(16593);const n={},i="Interface: LoadedWorkspace",a={},d=[{value:"See",id:"see",level:2},{value:"Properties",id:"properties",level:2}];function p(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(r.header,{children:(0,c.jsx)(r.h1,{id:"interface-loadedworkspace",children:"Interface: LoadedWorkspace"})}),"\n",(0,c.jsxs)(r.p,{children:["Defined in: ",(0,c.jsx)(r.a,{href:"https://github.com/AlexeyMz/reactodia-workspace/blob/42c7ea15cd556c6b748117824b201fc4257aca31/src/workspace/workspace.tsx#L444",children:"workspace/workspace.tsx:444"})]}),"\n",(0,c.jsx)(r.p,{children:"Result of the workspace initialization hook."}),"\n",(0,c.jsx)(r.h2,{id:"see",children:"See"}),"\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.a,{href:"/docs/api/workspace/functions/useLoadedWorkspace",children:"useLoadedWorkspace"})}),"\n",(0,c.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,c.jsxs)("table",{children:[(0,c.jsx)("thead",{children:(0,c.jsxs)("tr",{children:[(0,c.jsx)("th",{children:"Property"}),(0,c.jsx)("th",{children:"Modifier"}),(0,c.jsx)("th",{children:"Type"}),(0,c.jsx)("th",{children:"Description"})]})}),(0,c.jsxs)("tbody",{children:[(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{children:(0,c.jsxs)(r.p,{children:[(0,c.jsx)("a",{id:"getcontext"})," ",(0,c.jsx)(r.code,{children:"getContext"})]})}),(0,c.jsx)("td",{children:(0,c.jsx)(r.p,{children:(0,c.jsx)(r.code,{children:"readonly"})})}),(0,c.jsx)("td",{children:(0,c.jsxs)(r.p,{children:["() => ",(0,c.jsx)(r.a,{href:"/docs/api/workspace/interfaces/WorkspaceContext",children:(0,c.jsx)(r.code,{children:"WorkspaceContext"})})]})}),(0,c.jsxs)("td",{children:[(0,c.jsx)(r.p,{children:"Returns the top-level context for the mounted workspace via the hook."}),(0,c.jsx)(r.p,{children:"Throws an error if the workspace is not mounted yet."})]})]}),(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{children:(0,c.jsxs)(r.p,{children:[(0,c.jsx)("a",{id:"onmount"})," ",(0,c.jsx)(r.code,{children:"onMount"})]})}),(0,c.jsx)("td",{children:(0,c.jsx)(r.p,{children:(0,c.jsx)(r.code,{children:"readonly"})})}),(0,c.jsx)("td",{children:(0,c.jsxs)(r.p,{children:["(",(0,c.jsx)(r.code,{children:"workspace"}),") => ",(0,c.jsx)(r.code,{children:"void"})]})}),(0,c.jsx)("td",{children:(0,c.jsxs)(r.p,{children:["Callback to pass as ",(0,c.jsx)(r.code,{children:"ref"})," to the top-level workspace component\r\nto perform the initialization specified in the hook."]})})]})]})]})]})}function l(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,c.jsx)(r,{...e,children:(0,c.jsx)(p,{...e})}):p(e)}}}]);