"use strict";(self.webpackChunk_reactodia_reactodia_github_io=self.webpackChunk_reactodia_reactodia_github_io||[]).push([[61446],{69791:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var a=t(64922),s=t(16593);const r={title:"Canvas"},o="Canvas and widgets",c={id:"components/canvas",title:"Canvas",description:"Canvas is a main component to display a scrollable canvas for the diagram with elements, links and additional widgets.",source:"@site/docs/components/canvas.md",sourceDirName:"components",slug:"/components/canvas",permalink:"/docs/components/canvas",draft:!1,unlisted:!1,editUrl:"https://github.com/reactodia/reactodia.github.io/tree/main/docs/components/canvas.md",tags:[],version:"current",frontMatter:{title:"Canvas"},sidebar:"docs",previous:{title:"Components",permalink:"/docs/category/components"},next:{title:"Class Tree",permalink:"/docs/components/class-tree"}},i={},d=[{value:"Getting the canvas instance",id:"getting-the-canvas-instance",level:2},{value:"Canvas widgets",id:"canvas-widgets",level:2},{value:"Example: custom viewport widget",id:"example-custom-viewport-widget",level:3},{value:"Styles",id:"styles",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"canvas-and-widgets",children:"Canvas and widgets"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/docs/api/workspace/functions/Canvas",children:"Canvas"})," is a main component to display a scrollable canvas for the diagram with ",(0,a.jsx)(n.a,{href:"/docs/concepts/graph-model",children:"elements"}),", ",(0,a.jsx)(n.a,{href:"/docs/concepts/graph-model",children:"links"})," and additional widgets."]}),"\n",(0,a.jsx)(n.h2,{id:"getting-the-canvas-instance",children:"Getting the canvas instance"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/docs/api/workspace/functions/useCanvas",children:"useCanvas()"})," hook called from a canvas widget can be used to get the ",(0,a.jsx)(n.a,{href:"/docs/api/workspace/interfaces/CanvasApi",children:"CanvasApi"})," instance from a context to read or subscribe to the canvas state or perform viewport-related effects:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"function MyWidget() {\r\n  const {canvas} = Reactodia.useCanvas();\r\n  // Use canvas here\r\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Alternatively, with ",(0,a.jsx)(n.a,{href:"/docs/api/workspace/classes/SharedCanvasState#findanycanvas",children:"SharedCanvasState.findAnyCanvas()"})," or ",(0,a.jsx)(n.a,{href:"/docs/api/workspace/classes/SharedCanvasState#findallcanvases",children:"SharedCanvasState.findAllCanvases()"})," methods it is possible to get canvas instance outside the canvas component:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"function NonWidgetComponent {\r\n  const {view} = React.useWorkspace();\r\n\r\n  const canvas = view.findAnyCanvas();\r\n  if (canvas) {\r\n    // Use canvas here (could be any if there are several of them)\r\n  }\r\n\r\n  for (const canvas of view.findAllCanvases()) {\r\n    // Use each canvas mounted in the workspace\r\n  }\r\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"canvas-widgets",children:"Canvas widgets"}),"\n",(0,a.jsxs)(n.p,{children:["Canvas widget is an instance of any React component type which is marked by ",(0,a.jsx)(n.a,{href:"/docs/api/workspace/functions/defineCanvasWidget",children:"defineCanvasWidget()"})," function with metadata such as its attachment layer i.e. where the component should be displayed in relation to other canvas content."]}),"\n",(0,a.jsx)(n.p,{children:"There are multiple canvas layers to place widgets on, from top one to the bottom:"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Layer name"}),(0,a.jsx)(n.th,{children:(0,a.jsx)(n.a,{href:"/docs/concepts/canvas-coordinates",children:"Coordinate type"})}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"viewport"})}),(0,a.jsx)(n.td,{children:"client (viewport)"}),(0,a.jsx)(n.td,{children:"Topmost layer, does not scale or scroll with the diagram."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"overElements"})}),(0,a.jsx)(n.td,{children:"paper"}),(0,a.jsx)(n.td,{children:"Displayed over both elements and links, scales and scrolls with the diagram."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"overLinks"})}),(0,a.jsx)(n.td,{children:"paper"}),(0,a.jsx)(n.td,{children:"Displayed under elements but over links, scales and scrolls with the diagram."})]})]})]}),"\n",(0,a.jsx)(n.h3,{id:"example-custom-viewport-widget",children:"Example: custom viewport widget"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",metastring:"live noInline",live:!0,children:"function CustomSelectAllWidget() {\r\n  const {model} = Reactodia.useWorkspace();\r\n  return (\r\n    <Reactodia.ViewportDock dock='ne'>\r\n      <button type='button'\r\n        className='reactodia-btn reactodia-btn-default'\r\n        onClick={() => model.setSelection([...model.elements])}>\r\n        Select All\r\n      </button>\r\n    </Reactodia.ViewportDock>\r\n  );\r\n}\r\n\r\nReactodia.defineCanvasWidget(\r\n  CustomSelectAllWidget,\r\n  element => ({element, attachment: 'viewport'})\r\n);\r\n\r\nfunction Example() {\r\n  const {defaultLayout} = Reactodia.useWorker(Layouts);\r\n\r\n  const {onMount} = Reactodia.useLoadedWorkspace(async ({context, signal}) => {\r\n    const {model, view, performLayout} = context;\r\n    model.createElement('http://example.com/entity1');\r\n    model.createElement('http://example.com/entity2');\r\n    model.createLinks({\r\n      sourceId: 'http://example.com/entity1',\r\n      targetId: 'http://example.com/entity2',\r\n      linkTypeId: 'http://example.com/connectedTo',\r\n      properties: {},\r\n    });\r\n    await performLayout({signal});\r\n  }, []);\r\n\r\n  return (\r\n    <div className='reactodia-live-editor'>\r\n      <Reactodia.Workspace ref={onMount}\r\n        defaultLayout={defaultLayout}>\r\n        <Reactodia.DefaultWorkspace\r\n          search={null}\r\n          canvasWidgets={[<CustomSelectAllWidget key='select-all' />]}\r\n        />\r\n      </Reactodia.Workspace>\r\n    </div>\r\n  );\r\n}\r\n\r\nrender(<Example />);\n"})}),"\n",(0,a.jsx)(n.h2,{id:"styles",children:"Styles"}),"\n",(0,a.jsxs)(n.p,{children:["The component look can be customized using the following CSS properties (see ",(0,a.jsx)(n.a,{href:"/docs/concepts/design-system",children:"design system"})," for more information):"]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Property"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"--reactodia-canvas-background-color"})}),(0,a.jsx)(n.td,{children:"Background color for the canvas."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"--reactodia-canvas-box-shadow"})}),(0,a.jsx)(n.td,{children:"Box shadow for the UI components layered on top of the canvas."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"--reactodia-canvas-overlay-color"})}),(0,a.jsx)(n.td,{children:"Semi-transparent color to place over canvas content when displaying a modal on top."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"--reactodia-canvas-underlay-color"})}),(0,a.jsx)(n.td,{children:"Semi-transparent color to place under components for improved readability when they are placed on the canvas."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"--reactodia-element-background-color"})}),(0,a.jsx)(n.td,{children:"Default background color for the graph elements displayed on the canvas."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"--reactodia-link-stroke-color"})}),(0,a.jsx)(n.td,{children:"Default stroke color for the graph links displayed on the canvas."})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},16593:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var a=t(77810);const s={},r=a.createContext(s);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);