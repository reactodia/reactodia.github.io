"use strict";(self.webpackChunk_reactodia_reactodia_github_io=self.webpackChunk_reactodia_reactodia_github_io||[]).push([[19227],{16593:(e,r,s)=>{s.d(r,{R:()=>c,x:()=>o});var n=s(77810);const t={},a=n.createContext(t);function c(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),n.createElement(a.Provider,{value:r},e.children)}},90284:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"api/workspace/functions/shallowArrayEqual","title":"Function: shallowArrayEqual()","description":"shallowArrayEqual\\\\(a, b): boolean","source":"@site/docs/api/workspace/functions/shallowArrayEqual.md","sourceDirName":"api/workspace/functions","slug":"/api/workspace/functions/shallowArrayEqual","permalink":"/docs/api/workspace/functions/shallowArrayEqual","draft":false,"unlisted":false,"editUrl":"https://github.com/reactodia/reactodia.github.io/tree/main/docs/api/workspace/functions/shallowArrayEqual.md","tags":[],"version":"current","frontMatter":{},"sidebar":"api","previous":{"title":"moveComparator","permalink":"/docs/api/workspace/functions/moveComparator"},"next":{"title":"startDragElements","permalink":"/docs/api/workspace/functions/startDragElements"}}');var t=s(64922),a=s(16593);const c={},o="Function: shallowArrayEqual()",l={},i=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2}];function d(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"function-shallowarrayequal",children:"Function: shallowArrayEqual()"})}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"shallowArrayEqual"}),"<",(0,t.jsx)(r.code,{children:"T"}),">(",(0,t.jsx)(r.code,{children:"a"}),", ",(0,t.jsx)(r.code,{children:"b"}),"): ",(0,t.jsx)(r.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["Defined in: ",(0,t.jsx)(r.a,{href:"https://github.com/AlexeyMz/reactodia-workspace/blob/356ab81b3f74463db55a5118aa19d0298343db5f/src/coreUtils/collections.ts#L41",children:"coreUtils/collections.ts:41"})]}),"\n",(0,t.jsxs)(r.p,{children:["Returns ",(0,t.jsx)(r.code,{children:"true"})," if two arrays has equal elements (compared via ",(0,t.jsx)(r.code,{children:"==="}),")\r\nand in the same order, otherwise returns ",(0,t.jsx)(r.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(r.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,t.jsxs)("table",{children:[(0,t.jsx)("thead",{children:(0,t.jsx)("tr",{children:(0,t.jsx)("th",{children:"Type Parameter"})})}),(0,t.jsx)("tbody",{children:(0,t.jsx)("tr",{children:(0,t.jsx)("td",{children:(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"T"})})})})})]}),"\n",(0,t.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)("table",{children:[(0,t.jsx)("thead",{children:(0,t.jsxs)("tr",{children:[(0,t.jsx)("th",{children:"Parameter"}),(0,t.jsx)("th",{children:"Type"})]})}),(0,t.jsxs)("tbody",{children:[(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"a"})})}),(0,t.jsx)("td",{children:(0,t.jsxs)(r.p,{children:["readonly ",(0,t.jsx)(r.code,{children:"T"}),"[]"]})})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"b"})})}),(0,t.jsx)("td",{children:(0,t.jsxs)(r.p,{children:["readonly ",(0,t.jsx)(r.code,{children:"T"}),"[]"]})})]})]})]}),"\n",(0,t.jsx)(r.h2,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"boolean"})})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);