"use strict";(self.webpackChunk_reactodia_reactodia_github_io=self.webpackChunk_reactodia_reactodia_github_io||[]).push([[51643],{16593:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>d});var r=n(77810);const t={},c=r.createContext(t);function i(e){const s=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(c.Provider,{value:s},e.children)}},27278:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>i,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"api/workspace/functions/useEventStore","title":"Function: useEventStore()","description":"useEventStore\\\\(events, key, deps?): SyncStore","source":"@site/docs/api/workspace/functions/useEventStore.md","sourceDirName":"api/workspace/functions","slug":"/api/workspace/functions/useEventStore","permalink":"/docs/api/workspace/functions/useEventStore","draft":false,"unlisted":false,"editUrl":"https://github.com/reactodia/reactodia.github.io/tree/main/docs/api/workspace/functions/useEventStore.md","tags":[],"version":"current","frontMatter":{},"sidebar":"api","previous":{"title":"useColorScheme","permalink":"/docs/api/workspace/functions/useColorScheme"},"next":{"title":"useFrameDebouncedStore","permalink":"/docs/api/workspace/functions/useFrameDebouncedStore"}}');var t=n(64922),c=n(16593);const i={},d="Function: useEventStore()",o={},h=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2}];function l(e){const s={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"function-useeventstore",children:"Function: useEventStore()"})}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"useEventStore"}),"<",(0,t.jsx)(s.code,{children:"E"}),", ",(0,t.jsx)(s.code,{children:"K"}),">(",(0,t.jsx)(s.code,{children:"events"}),", ",(0,t.jsx)(s.code,{children:"key"}),", ",(0,t.jsx)(s.code,{children:"deps?"}),"): ",(0,t.jsx)(s.a,{href:"/docs/api/workspace/type-aliases/SyncStore",children:(0,t.jsx)(s.code,{children:"SyncStore"})})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/AlexeyMz/reactodia-workspace/blob/42c7ea15cd556c6b748117824b201fc4257aca31/src/coreUtils/hooks.ts#L55",children:"coreUtils/hooks.ts:55"})]}),"\n",(0,t.jsx)(s.p,{children:"Creates an event store which changes when an event triggers with the specified event type."}),"\n",(0,t.jsx)(s.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,t.jsxs)("table",{children:[(0,t.jsx)("thead",{children:(0,t.jsx)("tr",{children:(0,t.jsx)("th",{children:"Type Parameter"})})}),(0,t.jsxs)("tbody",{children:[(0,t.jsx)("tr",{children:(0,t.jsx)("td",{children:(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"E"})})})}),(0,t.jsx)("tr",{children:(0,t.jsx)("td",{children:(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"K"})," ",(0,t.jsx)(s.em,{children:"extends"})," ",(0,t.jsx)(s.code,{children:"string"})," | ",(0,t.jsx)(s.code,{children:"number"})," | ",(0,t.jsx)(s.code,{children:"symbol"})]})})})]})]}),"\n",(0,t.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)("table",{children:[(0,t.jsx)("thead",{children:(0,t.jsxs)("tr",{children:[(0,t.jsx)("th",{children:"Parameter"}),(0,t.jsx)("th",{children:"Type"}),(0,t.jsx)("th",{children:"Description"})]})}),(0,t.jsxs)("tbody",{children:[(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"events"})})}),(0,t.jsx)("td",{children:(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"undefined"})," | ",(0,t.jsx)(s.a,{href:"/docs/api/workspace/interfaces/Events",children:(0,t.jsx)(s.code,{children:"Events"})}),"<",(0,t.jsx)(s.code,{children:"E"}),">"]})}),(0,t.jsx)("td",{children:(0,t.jsx)(s.p,{children:"an observable object to subscribe with the result store"})})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"key"})})}),(0,t.jsx)("td",{children:(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"K"})})}),(0,t.jsx)("td",{children:(0,t.jsxs)(s.p,{children:["event type from the ",(0,t.jsx)(s.code,{children:"events"})," to subscribe with the result store"]})})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"deps?"})})}),(0,t.jsx)("td",{children:(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"DependencyList"})})}),(0,t.jsx)("td",{children:(0,t.jsx)(s.p,{children:"hook dependency list to re-subscribe to the store on changes"})})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"/docs/api/workspace/type-aliases/SyncStore",children:(0,t.jsx)(s.code,{children:"SyncStore"})})})]})}function a(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);