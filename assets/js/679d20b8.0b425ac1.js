"use strict";(self.webpackChunk_reactodia_reactodia_github_io=self.webpackChunk_reactodia_reactodia_github_io||[]).push([[73757],{16593:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>o});var t=n(77810);const r={},a=t.createContext(r);function s(e){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(a.Provider,{value:i},e.children)}},58597:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api/workspace/type-aliases/LinkTypeIri","title":"Type Alias: LinkTypeIri","description":"LinkTypeIri = string & object","source":"@site/docs/api/workspace/type-aliases/LinkTypeIri.md","sourceDirName":"api/workspace/type-aliases","slug":"/api/workspace/type-aliases/LinkTypeIri","permalink":"/docs/api/workspace/type-aliases/LinkTypeIri","draft":false,"unlisted":false,"editUrl":"https://github.com/reactodia/reactodia.github.io/tree/main/docs/api/workspace/type-aliases/LinkTypeIri.md","tags":[],"version":"current","frontMatter":{},"sidebar":"api","previous":{"title":"LinkTemplateResolver","permalink":"/docs/api/workspace/type-aliases/LinkTemplateResolver"},"next":{"title":"LinkTypeVisibility","permalink":"/docs/api/workspace/type-aliases/LinkTypeVisibility"}}');var r=n(64922),a=n(16593);const s={},o="Type Alias: LinkTypeIri",c={},d=[{value:"Type declaration",id:"type-declaration",level:2},{value:"__iriBrand?",id:"__iribrand",level:3}];function l(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"type-alias-linktypeiri",children:"Type Alias: LinkTypeIri"})}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"LinkTypeIri"})," = ",(0,r.jsx)(i.code,{children:"string"})," & ",(0,r.jsx)(i.code,{children:"object"})]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/AlexeyMz/reactodia-workspace/blob/356ab81b3f74463db55a5118aa19d0298343db5f/src/data/model.ts#L18",children:"data/model.ts:18"})]}),"\n",(0,r.jsx)(i.p,{children:"Nominal (branded) type for link (graph edge) type IRI, i.e. unique ID string."}),"\n",(0,r.jsx)(i.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,r.jsx)(i.h3,{id:"__iribrand",children:"__iriBrand?"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"readonly"})," ",(0,r.jsx)(i.code,{children:"optional"})," ",(0,r.jsx)(i.strong,{children:"__iriBrand"}),": ",(0,r.jsx)(i.code,{children:'"linkType"'})]}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);