"use strict";(self.webpackChunk_reactodia_reactodia_github_io=self.webpackChunk_reactodia_reactodia_github_io||[]).push([[60103],{16593:(e,c,t)=>{t.d(c,{R:()=>o,x:()=>i});var r=t(77810);const n={},s=r.createContext(n);function o(e){const c=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(c):{...c,...e}}),[c,e])}function i(e){let c;return c=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(s.Provider,{value:c},e.children)}},29817:(e,c,t)=>{t.r(c),t.d(c,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"api/workspace/functions/computePolyline","title":"Function: computePolyline()","description":"computePolyline(source, target, vertices): Vector[]","source":"@site/docs/api/workspace/functions/computePolyline.md","sourceDirName":"api/workspace/functions","slug":"/api/workspace/functions/computePolyline","permalink":"/docs/api/workspace/functions/computePolyline","draft":false,"unlisted":false,"editUrl":"https://github.com/reactodia/reactodia.github.io/tree/main/docs/api/workspace/functions/computePolyline.md","tags":[],"version":"current","frontMatter":{},"sidebar":"api","previous":{"title":"calculateLayout","permalink":"/docs/api/workspace/functions/calculateLayout"},"next":{"title":"computePolylineLength","permalink":"/docs/api/workspace/functions/computePolylineLength"}}');var n=t(64922),s=t(16593);const o={},i="Function: computePolyline()",a={},d=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2}];function l(e){const c={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(c.header,{children:(0,n.jsx)(c.h1,{id:"function-computepolyline",children:"Function: computePolyline()"})}),"\n",(0,n.jsxs)(c.blockquote,{children:["\n",(0,n.jsxs)(c.p,{children:[(0,n.jsx)(c.strong,{children:"computePolyline"}),"(",(0,n.jsx)(c.code,{children:"source"}),", ",(0,n.jsx)(c.code,{children:"target"}),", ",(0,n.jsx)(c.code,{children:"vertices"}),"): ",(0,n.jsx)(c.a,{href:"/docs/api/workspace/interfaces/Vector",children:(0,n.jsx)(c.code,{children:"Vector"})}),"[]"]}),"\n"]}),"\n",(0,n.jsxs)(c.p,{children:["Defined in: ",(0,n.jsx)(c.a,{href:"https://github.com/AlexeyMz/reactodia-workspace/blob/42c7ea15cd556c6b748117824b201fc4257aca31/src/diagram/geometry.ts#L274",children:"diagram/geometry.ts:274"})]}),"\n",(0,n.jsx)(c.p,{children:"Computes line geometry between two shapes clipped at each\r\nones border with intermediate points in-between."}),"\n",(0,n.jsx)(c.p,{children:"It is assumed that the line starts at source shape center,\r\nends at target shape center and goes through each vertex in the array."}),"\n",(0,n.jsx)(c.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsx)("thead",{children:(0,n.jsxs)("tr",{children:[(0,n.jsx)("th",{children:"Parameter"}),(0,n.jsx)("th",{children:"Type"})]})}),(0,n.jsxs)("tbody",{children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)(c.p,{children:(0,n.jsx)(c.code,{children:"source"})})}),(0,n.jsx)("td",{children:(0,n.jsxs)(c.p,{children:[(0,n.jsx)(c.a,{href:"/docs/api/workspace/interfaces/Rect",children:(0,n.jsx)(c.code,{children:"Rect"})})," | ",(0,n.jsx)(c.a,{href:"/docs/api/workspace/interfaces/ShapeGeometry",children:(0,n.jsx)(c.code,{children:"ShapeGeometry"})})]})})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)(c.p,{children:(0,n.jsx)(c.code,{children:"target"})})}),(0,n.jsx)("td",{children:(0,n.jsxs)(c.p,{children:[(0,n.jsx)(c.a,{href:"/docs/api/workspace/interfaces/Rect",children:(0,n.jsx)(c.code,{children:"Rect"})})," | ",(0,n.jsx)(c.a,{href:"/docs/api/workspace/interfaces/ShapeGeometry",children:(0,n.jsx)(c.code,{children:"ShapeGeometry"})})]})})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:(0,n.jsx)(c.p,{children:(0,n.jsx)(c.code,{children:"vertices"})})}),(0,n.jsx)("td",{children:(0,n.jsxs)(c.p,{children:["readonly ",(0,n.jsx)(c.a,{href:"/docs/api/workspace/interfaces/Vector",children:(0,n.jsx)(c.code,{children:"Vector"})}),"[]"]})})]})]})]}),"\n",(0,n.jsx)(c.h2,{id:"returns",children:"Returns"}),"\n",(0,n.jsxs)(c.p,{children:[(0,n.jsx)(c.a,{href:"/docs/api/workspace/interfaces/Vector",children:(0,n.jsx)(c.code,{children:"Vector"})}),"[]"]})]})}function h(e={}){const{wrapper:c}={...(0,s.R)(),...e.components};return c?(0,n.jsx)(c,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);