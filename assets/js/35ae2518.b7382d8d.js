"use strict";(self.webpackChunk_reactodia_reactodia_github_io=self.webpackChunk_reactodia_reactodia_github_io||[]).push([[39521],{16593:(e,o,t)=>{t.d(o,{R:()=>i,x:()=>a});var n=t(77810);const s={},r=n.createContext(s);function i(e){const o=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(r.Provider,{value:o},e.children)}},58310:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"concepts/keyboard-hotkeys","title":"Keyboard Hotkeys","description":"Reactodia provides a basic support for keyboard hotkeys (shortcuts) to perform an action on a key press.","source":"@site/docs/concepts/keyboard-hotkeys.md","sourceDirName":"concepts","slug":"/concepts/keyboard-hotkeys","permalink":"/docs/concepts/keyboard-hotkeys","draft":false,"unlisted":false,"editUrl":"https://github.com/reactodia/reactodia.github.io/tree/main/docs/concepts/keyboard-hotkeys.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9,"title":"Keyboard Hotkeys"},"sidebar":"docs","previous":{"title":"Overlay dialogs and tasks","permalink":"/docs/concepts/canvas-overlays"},"next":{"title":"Graph Authoring","permalink":"/docs/concepts/graph-authoring"}}');var s=t(64922),r=t(16593);const i={sidebar_position:9,title:"Keyboard Hotkeys"},a="Keyboard hotkeys (shortcuts)",c={},d=[{value:"Hotkey syntax",id:"hotkey-syntax",level:2},{value:"How to define a hotkey",id:"how-to-define-a-hotkey",level:2}];function l(e){const o={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.header,{children:(0,s.jsx)(o.h1,{id:"keyboard-hotkeys-shortcuts",children:"Keyboard hotkeys (shortcuts)"})}),"\n",(0,s.jsx)(o.p,{children:"Reactodia provides a basic support for keyboard hotkeys (shortcuts) to perform an action on a key press."}),"\n",(0,s.jsx)(o.admonition,{type:"note",children:(0,s.jsxs)(o.p,{children:["The library currently only supports a canvas-focused hotkeys which will be active only when the ",(0,s.jsx)(o.a,{href:"/docs/components/canvas",children:"canvas"})," or its content is focused, unlike global (page) hotkeys which are active when the focus is anywhere on the page."]})}),"\n",(0,s.jsx)(o.h2,{id:"hotkey-syntax",children:"Hotkey syntax"}),"\n",(0,s.jsxs)(o.p,{children:["A ",(0,s.jsx)(o.strong,{children:"hotkey string"})," represents a single keyboard key press with (optionally) one or more modifier keys being held."]}),"\n",(0,s.jsxs)(o.p,{children:["The valid hotkey expression is at least one or more modifiers and the key separated by ",(0,s.jsx)(o.code,{children:"+"}),":"]}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:["modifier is one of ",(0,s.jsx)(o.code,{children:"Mod"}),", ",(0,s.jsx)(o.code,{children:"Ctrl"}),", ",(0,s.jsx)(o.code,{children:"Meta"}),", ",(0,s.jsx)(o.code,{children:"Alt"}),", ",(0,s.jsx)(o.code,{children:"Shift"}),"\r\n(",(0,s.jsx)(o.code,{children:"Mod"})," is ",(0,s.jsx)(o.code,{children:"Meta"})," on Mac and ",(0,s.jsx)(o.code,{children:"Ctrl"})," everywhere else)."]}),"\n",(0,s.jsxs)(o.li,{children:["key is a ",(0,s.jsx)(o.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key",children:"KeyboardEvent.key"}),"\r\nwith a special case for ",(0,s.jsx)(o.code,{children:"A-Z"})," keys to handle them independently of an active keyboard layout\r\n(these keys will work even if a non-english keyboard layout is active)."]}),"\n",(0,s.jsxs)(o.li,{children:["single-letter keys are matched case-insensitively, so ",(0,s.jsx)(o.code,{children:"Ctrl+Shift+a"})," is the same as ",(0,s.jsx)(o.code,{children:"Ctrl+Shift+A"}),"."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"Shift"}),"-specific special keys needs to be specified as-is i.e. ",(0,s.jsx)(o.code,{children:"Shift+5"})," will not be triggered and\r\nshould be specified as ",(0,s.jsx)(o.code,{children:"Shift+%"})," (and only for keyboard layouts with that mapping)."]}),"\n"]}),"\n",(0,s.jsxs)(o.p,{children:["Example hotkey strings: ",(0,s.jsx)(o.code,{children:"Ctrl+Alt+K"}),", ",(0,s.jsx)(o.code,{children:"Alt+Meta+Q"}),", ",(0,s.jsx)(o.code,{children:"Ctrl+/"}),", ",(0,s.jsx)(o.code,{children:"None+G"}),"."]}),"\n",(0,s.jsx)(o.h2,{id:"how-to-define-a-hotkey",children:"How to define a hotkey"}),"\n",(0,s.jsxs)(o.p,{children:["At high level, various Reactodia components provide a prop for a hotkey string to perform a certain action, see ",(0,s.jsx)(o.a,{href:"/docs/components/toolbar",children:(0,s.jsx)(o.code,{children:"<ToolbarAction />"})}),", ",(0,s.jsx)(o.a,{href:"/docs/components/selection",children:(0,s.jsx)(o.code,{children:"<SelectionAction />"})}),":"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-tsx",children:"{/* Default hotkeys for the built-in components: */}\r\n<ToolbarActionUndo hotkey='Mod+Z' />\r\n<ToolbarActionRedo hotkey='Mod+Shift+Z' />\r\n<Selection hotkeySelectAll='Mod+A' />\r\n<SelectionActionGroup hokey='None+G' />\r\n<SelectionActionRemove hotkey='Node+Delete' />\r\n\r\n{/* Hotkey for a custom toolbar action: */}\r\n<ToolbarAction\r\n  hotkey=\"Ctrl+Alt+H\"\r\n  onSelect={() => {/*...*/}}>\r\n  Custom action\r\n</ToolbarAction>\n"})}),"\n",(0,s.jsxs)(o.p,{children:["At low level, it is possible to register a hotkey with ",(0,s.jsx)(o.a,{href:"/docs/api/workspace/functions/useCanvasHotkey",children:(0,s.jsx)(o.code,{children:"useCanvasHotkey()"})})," hook to listen for a specific hotkey as long as the caller component is mounted:"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-tsx",children:"function MyWidget() {\r\n  const actionKey = Reactodia.useCanvasHotkey('Ctrl+Alt+H', () => {\r\n    /* Perform hotkey action */\r\n  });\r\n\r\n  // Display the human-readable hotkey label (as text) in the UI\r\n  return (\r\n    <button>\r\n      Do the action ({actionKey.text})\r\n    </button>\r\n  );\r\n}\n"})}),"\n",(0,s.jsx)(o.admonition,{type:"warning",children:(0,s.jsx)(o.p,{children:"If multiple handlers are registered for the same hotkey, only the first one will run if triggered by the keypress."})})]})}function h(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);