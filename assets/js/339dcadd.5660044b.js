"use strict";(self.webpackChunk_reactodia_reactodia_github_io=self.webpackChunk_reactodia_reactodia_github_io||[]).push([[23526],{6218:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"api/workspace/interfaces/SparqlDataProviderSettings","title":"Interface: SparqlDataProviderSettings","description":"Defined in6","source":"@site/docs/api/workspace/interfaces/SparqlDataProviderSettings.md","sourceDirName":"api/workspace/interfaces","slug":"/api/workspace/interfaces/SparqlDataProviderSettings","permalink":"/docs/api/workspace/interfaces/SparqlDataProviderSettings","draft":false,"unlisted":false,"editUrl":"https://github.com/reactodia/reactodia.github.io/tree/main/docs/api/workspace/interfaces/SparqlDataProviderSettings.md","tags":[],"version":"current","frontMatter":{},"sidebar":"api","previous":{"title":"PropertyTypeModel","permalink":"/docs/api/workspace/interfaces/PropertyTypeModel"},"next":{"title":"SubtypeEdge","permalink":"/docs/api/workspace/type-aliases/SubtypeEdge"}}');var s=r(64922),l=r(16593);const d={},c="Interface: SparqlDataProviderSettings",t={},a=[{value:"Properties",id:"properties",level:2}];function o(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"interface-sparqldataprovidersettings",children:"Interface: SparqlDataProviderSettings"})}),"\n",(0,s.jsxs)(i.p,{children:["Defined in: ",(0,s.jsx)(i.a,{href:"https://github.com/AlexeyMz/reactodia-workspace/blob/356ab81b3f74463db55a5118aa19d0298343db5f/src/data/sparql/sparqlDataProviderSettings.ts#L6",children:"data/sparql/sparqlDataProviderSettings.ts:6"})]}),"\n",(0,s.jsxs)(i.p,{children:["Dataset-schema specific settings for ",(0,s.jsx)(i.a,{href:"/docs/api/workspace/classes/SparqlDataProvider",children:"SparqlDataProvider"}),"."]}),"\n",(0,s.jsx)(i.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Property"}),(0,s.jsx)("th",{children:"Type"}),(0,s.jsx)("th",{children:"Description"})]})}),(0,s.jsxs)("tbody",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"classinfoquery"})," ",(0,s.jsx)(i.code,{children:"classInfoQuery?"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsxs)("td",{children:[(0,s.jsx)(i.p,{children:"SELECT query to retrieve data for each class in a set."}),(0,s.jsx)(i.p,{children:"Parametrized variables:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${ids}"})," VALUES clause content with class IRIs"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${schemaLabelProperty}"})," ",(0,s.jsx)(i.code,{children:"schemaLabelProperty"})," property from the settings"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${labelLanguageFilter}"})," label filter based on ",(0,s.jsx)(i.code,{children:"filterOnlyLanguages"})]}),"\n"]}),(0,s.jsx)(i.p,{children:"Expected output bindings:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"?class"})}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?label"})," (optional)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?instcount"})," (optional)"]}),"\n"]})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"classtreequery"})," ",(0,s.jsx)(i.code,{children:"classTreeQuery?"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsxs)("td",{children:[(0,s.jsx)(i.p,{children:"SELECT query to retrieve class tree."}),(0,s.jsx)(i.p,{children:"Parametrized variables:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${schemaLabelProperty}"})," ",(0,s.jsx)(i.code,{children:"schemaLabelProperty"})," property from the settings"]}),"\n"]}),(0,s.jsx)(i.p,{children:"Expected output bindings:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"?class"})}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?label"})," (optional)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?parent"})," (optional)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?instcount"})," (optional)"]}),"\n"]})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"datalabelproperty"})," ",(0,s.jsx)(i.code,{children:"dataLabelProperty"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:"Property path for querying instance data labels (elements, links)."})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"defaultprefix"})," ",(0,s.jsx)(i.code,{children:"defaultPrefix"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:"Default prefix to be used in every query."})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"elementinfoquery"})," ",(0,s.jsx)(i.code,{children:"elementInfoQuery"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsxs)("td",{children:[(0,s.jsx)(i.p,{children:"CONSTRUCT query to retrieve data for each element (types, labels, properties)."}),(0,s.jsx)(i.p,{children:"Parametrized variables:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${ids}"})," VALUES clause content with element IRIs"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${dataLabelProperty}"})," ",(0,s.jsx)(i.code,{children:"dataLabelProperty"})," property from the settings"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${labelLanguageFilter}"})," label filter based on ",(0,s.jsx)(i.code,{children:"filterOnlyLanguages"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${valueLanguageFilter}"})," property value filter based on ",(0,s.jsx)(i.code,{children:"filterOnlyLanguages"})]}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"${propertyConfigurations}"})}),"\n"]}),(0,s.jsx)(i.p,{children:"Expected output format for triples:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?inst <urn:reactodia:sparql:type> ?class"})," element has type"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?inst <urn:reactodia:sparql:label> ?label"})," element has label"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?inst ?propType ?propValue"})," element has value for a datatype property"]}),"\n"]})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"filteradditionalrestriction"})," ",(0,s.jsx)(i.code,{children:"filterAdditionalRestriction"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:"SPARQL query pattern for additional filtering on elements within the lookup query."})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"filterelementinfopattern"})," ",(0,s.jsx)(i.code,{children:"filterElementInfoPattern"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsxs)("td",{children:[(0,s.jsxs)(i.p,{children:["SPARQL pattern which describes how to fetch elements info similar to ",(0,s.jsx)(i.code,{children:"elementInfoQuery"}),"\r\nbut within the lookup query."]}),(0,s.jsx)(i.p,{children:"Parametrized variables:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${dataLabelProperty}"})," ",(0,s.jsx)(i.code,{children:"dataLabelProperty"})," property from the settings"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${labelLanguageFilter}"})," label filter based on ",(0,s.jsx)(i.code,{children:"filterOnlyLanguages"})]}),"\n"]})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"filteronlylanguages"})," ",(0,s.jsx)(i.code,{children:"filterOnlyLanguages?"})]})}),(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:["readonly ",(0,s.jsx)(i.code,{children:"string"}),"[]"]})}),(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:["Set of language tags to provide a ",(0,s.jsx)(i.code,{children:"FILTER"})," for labels and other literal values."]})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"filterrefelementlinkpattern"})," ",(0,s.jsx)(i.code,{children:"filterRefElementLinkPattern"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsxs)("td",{children:[(0,s.jsxs)(i.p,{children:["SPARQL query pattern to restrict lookup results in case when\r\n",(0,s.jsx)(i.a,{href:"/docs/api/workspace/interfaces/DataProviderLookupParams#refelementlinkid",children:"DataProviderLookupParams.refElementLinkId"})," is not specified."]}),(0,s.jsx)(i.p,{children:"Available bindings:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?link"})," link type"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?direction"})," link direction, either ",(0,s.jsx)(i.code,{children:'"in"'})," or ",(0,s.jsx)(i.code,{children:'"out"'})]}),"\n"]})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"filtertypepattern"})," ",(0,s.jsx)(i.code,{children:"filterTypePattern"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsxs)("td",{children:[(0,s.jsx)(i.p,{children:"SPARQL query pattern to retrieve transitive type sets for elements."}),(0,s.jsx)(i.p,{children:"Expected output bindings:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?inst"})," element IRI"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?class"})," element type (there may be multiple or transitive types for an element)"]}),"\n"]})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"fulltextsearch"})," ",(0,s.jsx)(i.code,{children:"fullTextSearch"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"/docs/api/workspace/interfaces/FullTextSearchSettings",children:(0,s.jsx)(i.code,{children:"FullTextSearchSettings"})})})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:"Lookup by text settings."})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"imagequerypattern"})," ",(0,s.jsx)(i.code,{children:"imageQueryPattern"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsxs)("td",{children:[(0,s.jsx)(i.p,{children:"Query pattern to retrieve image URL for an element."}),(0,s.jsx)(i.p,{children:"Expected bindings:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?inst"})," element IRI"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?linkType"})," image property IRI"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?image"})," result image URL"]}),"\n"]})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"linkconfigurations"})," ",(0,s.jsx)(i.code,{children:"linkConfigurations"})]})}),(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"/docs/api/workspace/interfaces/LinkConfiguration",children:(0,s.jsx)(i.code,{children:"LinkConfiguration"})}),"[]"]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:'"Virtual" links configurations to translate a SPARQL pattern as a link.'})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"linksinfoquery"})," ",(0,s.jsx)(i.code,{children:"linksInfoQuery"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsxs)("td",{children:[(0,s.jsxs)(i.p,{children:["SELECT query to retrieve links between specified ",(0,s.jsx)(i.code,{children:"sourceIris"})," and\r\n",(0,s.jsx)(i.code,{children:"targetIris"})," sets of entities."]}),(0,s.jsxs)(i.p,{children:["For backwards compatibility, ",(0,s.jsx)(i.code,{children:"${ids}"})," placeholder variable with\r\ncombined set of entities can be used; in that case incremental\r\nlink querying will be disabled."]}),(0,s.jsx)(i.p,{children:"Parametrized variables:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${sourceIris}"})," VALUES clause content with source entity IRIs"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${targetIris}"})," VALUES clause content with target entity IRIs"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${ids}"})," VALUES clause content with all entity IRIs (for compatibility)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${propLanguageFilter}"})," property value filter based on ",(0,s.jsx)(i.code,{children:"filterOnlyLanguages"})]}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"${linkConfigurations}"})}),"\n"]}),(0,s.jsx)(i.p,{children:"Expected output bindings:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?type"})," link type"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?source"})," link source"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?target"})," link target"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?propType"})," (optional) link property type"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?propValue"})," (optional) link property value"]}),"\n"]})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"linktypesinfoquery"})," ",(0,s.jsx)(i.code,{children:"linkTypesInfoQuery?"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsxs)("td",{children:[(0,s.jsx)(i.p,{children:"SELECT query to retrieve data for each link type in a set."}),(0,s.jsx)(i.p,{children:"Parametrized variables:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${ids}"})," VALUES clause content with link type IRIs"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${schemaLabelProperty}"})," ",(0,s.jsx)(i.code,{children:"schemaLabelProperty"})," property from the settings"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${labelLanguageFilter}"})," label filter based on ",(0,s.jsx)(i.code,{children:"filterOnlyLanguages"})]}),"\n"]}),(0,s.jsx)(i.p,{children:"Expected output bindings:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"?link"})}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?label"})," (optional)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?instcount"})," (optional)"]}),"\n"]})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"linktypesofquery"})," ",(0,s.jsx)(i.code,{children:"linkTypesOfQuery"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsxs)("td",{children:[(0,s.jsx)(i.p,{children:"SELECT query to retrieve incoming/outgoing link types from specified element with statistics."}),(0,s.jsxs)(i.p,{children:["If ",(0,s.jsx)(i.code,{children:"?direction"})," binding is returned, it would be possible to avoid statistics query\r\nwhen ",(0,s.jsx)(i.code,{children:"inexactCount"})," mode is requested in ",(0,s.jsx)(i.a,{href:"/docs/api/workspace/interfaces/DataProvider#connectedlinkstats",children:"DataProvider.connectedLinkStats"}),"."]}),(0,s.jsx)(i.p,{children:"Parametrized variables:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"${elementIri}"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"${linkConfigurations}"})}),"\n"]}),(0,s.jsx)(i.p,{children:"Expected bindings:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"?link"})}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?direction"})," (optional) - expected values: ",(0,s.jsx)(i.code,{children:'"in"'}),", ",(0,s.jsx)(i.code,{children:'"out"'}),"."]}),"\n"]})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"linktypespattern"})," ",(0,s.jsx)(i.code,{children:"linkTypesPattern?"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsxs)("td",{children:[(0,s.jsxs)(i.p,{children:["Overridable part of ",(0,s.jsx)(i.code,{children:"linkTypesQuery"})," with same output bindings."]}),(0,s.jsx)(i.p,{children:"Parametrized variables: none"})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"linktypesquery"})," ",(0,s.jsx)(i.code,{children:"linkTypesQuery?"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsxs)("td",{children:[(0,s.jsx)(i.p,{children:"SELECT query to retrieve initial link types."}),(0,s.jsx)(i.p,{children:"Parametrized variables:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${linkTypesPattern}"})," ",(0,s.jsx)(i.code,{children:"linkTypesPattern"})," property from the settings"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${schemaLabelProperty}"})," ",(0,s.jsx)(i.code,{children:"schemaLabelProperty"})," property from the settings"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${labelLanguageFilter}"})," label filter based on ",(0,s.jsx)(i.code,{children:"filterOnlyLanguages"})]}),"\n"]}),(0,s.jsx)(i.p,{children:"Expected output bindings:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"?link"})}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?label"})," (optional)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?instcount"})," (optional)"]}),"\n"]})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"linktypesstatisticsquery"})," ",(0,s.jsx)(i.code,{children:"linkTypesStatisticsQuery"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsxs)("td",{children:[(0,s.jsx)(i.p,{children:"SELECT query to retrieve statistics of incoming/outgoing link types for specified element."}),(0,s.jsx)(i.p,{children:"Parametrized variables:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"${linkId}"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"${elementIri}"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"${linkConfigurationOut}"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"${linkConfigurationIn}"})}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${navigateElementFilterOut}"})," (optional; for blank node support only)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${navigateElementFilterIn}"})," (optional; for blank node support only)"]}),"\n"]}),(0,s.jsx)(i.p,{children:"Expected bindings:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?link"})," link type"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?inCount"})," incoming links count"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?outCount"})," outgoing links count"]}),"\n"]})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"openworldlinks"})," ",(0,s.jsx)(i.code,{children:"openWorldLinks?"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})}),(0,s.jsxs)("td",{children:[(0,s.jsxs)(i.p,{children:["Allows data provider to find links other than specified in ",(0,s.jsx)(i.code,{children:"linkConfigurations"}),"\r\nwhen ",(0,s.jsx)(i.code,{children:"linkConfigurations"})," has at least one value set."]}),(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Default"})}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:"false\n"})})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"openworldproperties"})," ",(0,s.jsx)(i.code,{children:"openWorldProperties?"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})}),(0,s.jsxs)("td",{children:[(0,s.jsxs)(i.p,{children:["Allows data provider to find element properties other than specified in\r\n",(0,s.jsx)(i.code,{children:"propertyConfigurations"})," when ",(0,s.jsx)(i.code,{children:"propertyConfigurations"})," has at least one value set."]}),(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Default"})}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:"false\n"})})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"propertyconfigurations"})," ",(0,s.jsx)(i.code,{children:"propertyConfigurations"})]})}),(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"/docs/api/workspace/interfaces/PropertyConfiguration",children:(0,s.jsx)(i.code,{children:"PropertyConfiguration"})}),"[]"]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:'"Virtual" property configurations to translate a SPARQL pattern as an element property.'})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"propertyinfoquery"})," ",(0,s.jsx)(i.code,{children:"propertyInfoQuery?"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsxs)("td",{children:[(0,s.jsx)(i.p,{children:"SELECT query to retrieve data for each datatype property in a set."}),(0,s.jsx)(i.p,{children:"Parametrized variables:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${ids}"})," VALUES clause content with datatype property IRIs"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${schemaLabelProperty}"})," ",(0,s.jsx)(i.code,{children:"schemaLabelProperty"})," property from the settings"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${labelLanguageFilter}"})," label filter based on ",(0,s.jsx)(i.code,{children:"filterOnlyLanguages"})]}),"\n"]}),(0,s.jsx)(i.p,{children:"Expected output bindings:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"?property"})}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"?label"})," (optional)"]}),"\n"]})]})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)("a",{id:"schemalabelproperty"})," ",(0,s.jsx)(i.code,{children:"schemaLabelProperty"})]})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(i.p,{children:"Property path for querying schema labels in schema (classes, link types, properties)."})})]})]})]})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},16593:(e,i,r)=>{r.d(i,{R:()=>d,x:()=>c});var n=r(77810);const s={},l=n.createContext(s);function d(e){const i=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),n.createElement(l.Provider,{value:i},e.children)}}}]);