"use strict";(self.webpackChunk_reactodia_reactodia_github_io=self.webpackChunk_reactodia_reactodia_github_io||[]).push([[68022],{21034:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var s=c(64922),t=c(16593);const o={},a="Vector",i={id:"api/workspace/namespaces/Vector/index",title:"Vector",description:"Utility functions to operate on 2D vectors.",source:"@site/docs/api/workspace/namespaces/Vector/index.md",sourceDirName:"api/workspace/namespaces/Vector",slug:"/api/workspace/namespaces/Vector/",permalink:"/docs/api/workspace/namespaces/Vector/",draft:!1,unlisted:!1,editUrl:"https://github.com/reactodia/reactodia.github.io/tree/main/docs/api/workspace/namespaces/Vector/index.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"Function: intersects()",permalink:"/docs/api/workspace/namespaces/Rect/functions/intersects"},next:{title:"Function: add()",permalink:"/docs/api/workspace/namespaces/Vector/functions/add"}},r={},d=[{value:"Index",id:"index",level:2},{value:"Functions",id:"functions",level:3}];function p(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"vector",children:"Vector"}),"\n",(0,s.jsx)(n.p,{children:"Utility functions to operate on 2D vectors."}),"\n",(0,s.jsx)(n.h2,{id:"index",children:"Index"}),"\n",(0,s.jsx)(n.h3,{id:"functions",children:"Functions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/api/workspace/namespaces/Vector/functions/add",children:"add"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/api/workspace/namespaces/Vector/functions/cross2D",children:"cross2D"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/api/workspace/namespaces/Vector/functions/dot",children:"dot"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/api/workspace/namespaces/Vector/functions/equals",children:"equals"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/api/workspace/namespaces/Vector/functions/length",children:"length"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/api/workspace/namespaces/Vector/functions/normalize",children:"normalize"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/api/workspace/namespaces/Vector/functions/scale",children:"scale"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/api/workspace/namespaces/Vector/functions/subtract",children:"subtract"})}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},16593:(e,n,c)=>{c.d(n,{R:()=>a,x:()=>i});var s=c(77810);const t={},o=s.createContext(t);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);