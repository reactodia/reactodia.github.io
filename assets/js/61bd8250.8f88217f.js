"use strict";(self.webpackChunk_reactodia_reactodia_github_io=self.webpackChunk_reactodia_reactodia_github_io||[]).push([[63863],{97549:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var s=t(64922),o=t(16593);const r={sidebar_position:5},c="Workspace Context",a={id:"concepts/workspace-context",title:"Workspace Context",description:"Reactodia uses a common context to connect its components with the graph model and other services such as graph layout, i18n and visual graph authoring.",source:"@site/docs/concepts/workspace-context.md",sourceDirName:"concepts",slug:"/concepts/workspace-context",permalink:"/docs/concepts/workspace-context",draft:!1,unlisted:!1,editUrl:"https://github.com/reactodia/reactodia.github.io/tree/main/docs/concepts/workspace-context.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docs",previous:{title:"Command History",permalink:"/docs/concepts/command-history"},next:{title:"Canvas Coordinates",permalink:"/docs/concepts/canvas-coordinates"}},i={},d=[{value:"Services and stores in the context",id:"services-and-stores-in-the-context",level:2},{value:"Getting the workspace context",id:"getting-the-workspace-context",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"workspace-context",children:"Workspace Context"}),"\n",(0,s.jsxs)(n.p,{children:["Reactodia uses a common context to connect its components with the ",(0,s.jsx)(n.a,{href:"/docs/concepts/graph-model",children:"graph model"})," and other services such as ",(0,s.jsx)(n.a,{href:"/docs/concepts/layout-workers",children:"graph layout"}),", ",(0,s.jsx)(n.a,{href:"/docs/concepts/i18n",children:"i18n"})," and ",(0,s.jsx)(n.a,{href:"/docs/concepts/graph-authoring",children:"visual graph authoring"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"services-and-stores-in-the-context",children:"Services and stores in the context"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"/docs/api/workspace/interfaces/WorkspaceContext",children:(0,s.jsx)(n.code,{children:"WorkspaceContext"})})," contains references to different services and state stores, here is the important ones:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"model"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/docs/api/workspace/classes/DataDiagramModel",children:(0,s.jsx)(n.code,{children:"DataDiagramModel"})})}),(0,s.jsxs)(n.td,{children:["Stores the diagram content and asynchronously fetches from a data provider.",(0,s.jsx)("br",{}),"See ",(0,s.jsx)(n.a,{href:"/docs/concepts/graph-model",children:"graph model"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"view"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/docs/api/workspace/classes/SharedCanvasState",children:(0,s.jsx)(n.code,{children:"SharedCanvasState"})})}),(0,s.jsxs)(n.td,{children:["Stores common state and settings for all ",(0,s.jsx)(n.a,{href:"/docs/components/canvas",children:"canvases"})," in the workspace."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"editor"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/docs/api/workspace/classes/EditorController",children:(0,s.jsx)(n.code,{children:"EditorController"})})}),(0,s.jsxs)(n.td,{children:["Stores, modifies and validates changes from the visual graph authoring.",(0,s.jsx)("br",{}),"See ",(0,s.jsx)(n.a,{href:"/docs/concepts/graph-authoring",children:"graph authoring"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"overlay"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/docs/api/workspace/classes/OverlayController",children:(0,s.jsx)(n.code,{children:"OverlayController"})})}),(0,s.jsx)(n.td,{children:"Controls UI overlays for the canvases, including dialogs and tasks."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"translation"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/docs/api/workspace/interfaces/Translation",children:(0,s.jsx)(n.code,{children:"Translation"})})}),(0,s.jsxs)(n.td,{children:["Provides a translation for UI text strings.",(0,s.jsx)("br",{}),"See ",(0,s.jsx)(n.a,{href:"/docs/concepts/i18n",children:"i18n"}),"."]})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"getting-the-workspace-context",children:"Getting the workspace context"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"/docs/api/workspace/interfaces/WorkspaceContext",children:(0,s.jsx)(n.code,{children:"WorkspaceContext"})})," instance can be acquired in two ways.\r\nThe first one is from the result of ",(0,s.jsx)(n.code,{children:"useLoadedWorkspace()"})," hook which is used for initialization of the ",(0,s.jsx)(n.a,{href:"/docs/components/workspace",children:(0,s.jsx)(n.code,{children:"Workspace"})})," component:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"function Example() {\r\n  const {defaultLayout} = Reactodia.useWorker(Layouts);\r\n\r\n  const {onMount, getContext} = Reactodia.useLoadedWorkspace(async ({context, signal}) => {\r\n      /* ... */\r\n  }, []);\r\n\r\n  const onSomething = () => {\r\n    const {model, editor, /* etc */} = getContext();\r\n    // Use workspace context\r\n  };\r\n\r\n  return (\r\n    <Reactodia.Workspace ref={onMount}\r\n      defaultLayout={defaultLayout}>\r\n      {/* ... */}\r\n    </Reactodia.Workspace>\r\n  );\r\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The second way is to use ",(0,s.jsx)(n.a,{href:"/docs/api/workspace/functions/useWorkspace",children:(0,s.jsx)(n.code,{children:"useWorkspace()"})})," hook inside the ",(0,s.jsx)(n.a,{href:"/docs/components/workspace",children:(0,s.jsx)(n.code,{children:"Workspace"})})," component itself, e.g. a canvas widget:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"function MyWidget() {\r\n  const {model, editor, /* etc */} = Reactodia.useWorkspace();\r\n  // Use workspace context\r\n}\r\n\r\nReactodia.defineCanvasWidget(MyWidget, element => ({element, attachment: 'viewport'}));\r\n\r\nfunction Example() {\r\n  const {defaultLayout} = Reactodia.useWorker(Layouts);\r\n  return (\r\n      <Reactodia.Workspace ref={onMount}\r\n        defaultLayout={defaultLayout}>\r\n        <Reactodia.DefaultWorkspace\r\n          search={null}\r\n          canvasWidgets={[<MyWidget key='my-widget' />]}\r\n        />\r\n      </Reactodia.Workspace>\r\n  );\r\n}\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["The library also uses separate context for ",(0,s.jsx)(n.a,{href:"/docs/concepts/i18n",children:"i18n"})," (which is accessible by ",(0,s.jsx)(n.a,{href:"/docs/api/workspace/functions/useTranslation",children:(0,s.jsx)(n.code,{children:"useTranslation()"})})," hook and ",(0,s.jsx)(n.code,{children:"translation"})," property of the workspace context) and a nested context for the ",(0,s.jsx)(n.a,{href:"/docs/components/canvas",children:(0,s.jsx)(n.code,{children:"Canvas"})}),"."]})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},16593:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var s=t(77810);const o={},r=s.createContext(o);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);