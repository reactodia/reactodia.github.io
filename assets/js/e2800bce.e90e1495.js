"use strict";(self.webpackChunk_reactodia_reactodia_github_io=self.webpackChunk_reactodia_reactodia_github_io||[]).push([[62756],{12495:(e,o,r)=>{r.r(o),r.d(o,{Button:()=>f,Buttons:()=>b,Inputs:()=>j,NamedColorBoxes:()=>g,assets:()=>m,contentTitle:()=>p,default:()=>y,frontMatter:()=>h,metadata:()=>u,toc:()=>x});var n=r(64922),t=r(16593),a=r(38410),c=r(77810);function i(e){const{states:o,value:r,onChange:t}=e;return(0,n.jsx)("div",{className:"reactodia-btn reactodia-btn-group",children:o.map((e=>(0,n.jsx)("button",{type:"button",className:"reactodia-btn reactodia-btn-default "+(r===e?"active":""),onClick:()=>t(e),children:e},e)))})}const s={component:"component_IXm8"};function d(e){const{colors:o}=e;return(0,n.jsx)("div",{className:s.component,children:o.map((e=>(0,n.jsx)("div",{style:{background:e},title:e},e)))})}function l(e){return(0,n.jsx)(a.A,{children:()=>{const{ReactodiaStyleRoot:o}=r(28827);return(0,n.jsx)(o,{...e})}})}const h={sidebar_position:10,title:"Design System"},p="Basic Design System",u={id:"concepts/design-system",title:"Design System",description:"Reactodia defines a basic design system inspired by Infima styling framework to support both light and dark color schemes and easy customization via CSS custom properties.",source:"@site/docs/concepts/design-system.mdx",sourceDirName:"concepts",slug:"/concepts/design-system",permalink:"/docs/concepts/design-system",draft:!1,unlisted:!1,editUrl:"https://github.com/reactodia/reactodia.github.io/tree/main/docs/concepts/design-system.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,title:"Design System"},sidebar:"docs",previous:{title:"UI localization and i18n",permalink:"/docs/concepts/i18n"},next:{title:"Components",permalink:"/docs/category/components"}},m={},x=[{value:"Colors",id:"colors",level:2},{value:"Grays",id:"color-grays",level:3},{value:"Emphasis",id:"color-emphasis",level:3},{value:"Content and Background",id:"content-and-background",level:3},{value:"Named colors",id:"named-colors",level:3},{value:"<code>primary</code> color",id:"primary-color",level:4},{value:"<code>secondary</code> color",id:"secondary-color",level:4},{value:"<code>success</code> color",id:"success-color",level:4},{value:"<code>info</code> color",id:"info-color",level:4},{value:"<code>warning</code> color",id:"warning-color",level:4},{value:"<code>danger</code> color",id:"danger-color",level:4},{value:"Text",id:"text",level:2},{value:"Borders",id:"borders",level:2},{value:"Spacing",id:"spacing",level:2},{value:"Controls",id:"controls",level:2},{value:"Buttons",id:"buttons",level:3},{value:"Inputs",id:"inputs",level:3}],g=({color:e})=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(d,{colors:[`var(--reactodia-color-${e}-lightest)`,`var(--reactodia-color-${e}-lighter)`,`var(--reactodia-color-${e}-light)`,`var(--reactodia-color-${e})`,`var(--reactodia-color-${e}-dark)`,`var(--reactodia-color-${e}-darker)`,`var(--reactodia-color-${e}-darkest)`]}),(0,n.jsx)(d,{colors:[`var(--reactodia-color-${e}-contrast-background)`,`var(--reactodia-color-${e}-contrast-foreground)`]})]}),f=({kind:e,state:o})=>{const r={button:"button",span:"span",...(0,t.R)()},a="active"===o?"active":"";return(0,n.jsx)(r.button,{type:"button",className:`reactodia-btn reactodia-btn-${e} ${a}`,disabled:"disabled"===o,children:(0,n.jsx)(r.span,{style:{textTransform:"capitalize"},children:e})})},b=()=>{const e={div:"div",...(0,t.R)()},[o,r]=c.useState("default");return(0,n.jsxs)(e.div,{style:{display:"flex",flexDirection:"column",gap:10},children:[(0,n.jsxs)(e.div,{children:["Button state:",(0,n.jsx)(i,{states:["default","active","disabled"],value:o,onChange:r})]}),(0,n.jsxs)(e.div,{style:{display:"flex",flexDirection:"row",flexWrap:"wrap",gap:5},children:[(0,n.jsx)(f,{kind:"default",state:o}),(0,n.jsx)(f,{kind:"primary",state:o}),(0,n.jsx)(f,{kind:"secondary",state:o}),(0,n.jsx)(f,{kind:"success",state:o}),(0,n.jsx)(f,{kind:"info",state:o}),(0,n.jsx)(f,{kind:"warning",state:o}),(0,n.jsx)(f,{kind:"danger",state:o})]})]})},j=()=>{const e={div:"div",input:"input",option:"option",select:"select",...(0,t.R)()},[o,r]=c.useState("default");return(0,n.jsxs)(e.div,{style:{display:"flex",flexDirection:"column",gap:10},children:[(0,n.jsxs)(e.div,{children:["Input state:",(0,n.jsx)(i,{states:["default","disabled"],value:o,onChange:r})]}),(0,n.jsxs)(e.div,{style:{display:"flex",flexDirection:"column",gap:5,maxWidth:300},children:[(0,n.jsx)(e.input,{type:"text",className:"reactodia-form-control",placeholder:"Input text here...",disabled:"disabled"===o}),(0,n.jsxs)(e.select,{className:"reactodia-form-control",disabled:"disabled"===o,children:[(0,n.jsx)(e.option,{children:"Option 1"}),(0,n.jsx)(e.option,{children:"Option 2"}),(0,n.jsx)(e.option,{children:"Option 3"})]})]})]})};function v(e){const o={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h1,{id:"basic-design-system",children:"Basic Design System"}),"\n",(0,n.jsxs)(o.p,{children:["Reactodia defines a basic design system inspired by ",(0,n.jsx)(o.a,{href:"https://infima.dev/",children:"Infima"})," styling framework to support both light and dark color schemes and easy customization via ",(0,n.jsx)(o.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_cascading_variables/Using_CSS_custom_properties",children:"CSS custom properties"}),"."]}),"\n",(0,n.jsxs)(o.p,{children:["This page documents base (common) styles for used as defaults for all UI components. Component-specific CSS properties are documented on the corresponding ",(0,n.jsx)(o.a,{href:"/docs/category/components",children:"component pages"}),"."]}),"\n",(0,n.jsxs)(o.p,{children:["See ",(0,n.jsx)(o.a,{href:"https://github.com/reactodia/reactodia-workspace/tree/master/styles/theme",children:"Reactodia theme styling source"})," for the complete list of CSS properties to customize and their defaults for both light and dark color schemes."]}),"\n",(0,n.jsx)(o.h2,{id:"colors",children:"Colors"}),"\n",(0,n.jsx)(o.admonition,{type:"tip",children:(0,n.jsx)(o.p,{children:"Toggle active color scheme at the top to see how the default colors are defined for either light or dark themes."})}),"\n",(0,n.jsx)(o.h3,{id:"color-grays",children:"Grays"}),"\n",(0,n.jsx)(l,{children:(0,n.jsx)(d,{colors:Array.from({length:11},((e,o)=>`var(--reactodia-color-gray-${100*o})`))})}),"\n",(0,n.jsx)(o.p,{children:"Color-scheme independent gray colors gradient from 0 (white) to 1000 (black) in increments of 100:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-css",children:"--reactodia-color-gray-{i}\n"})}),"\n",(0,n.jsx)(o.h3,{id:"color-emphasis",children:"Emphasis"}),"\n",(0,n.jsx)(l,{children:(0,n.jsx)(d,{colors:Array.from({length:11},((e,o)=>`var(--reactodia-color-emphasis-${100*o})`))})}),"\n",(0,n.jsx)(o.p,{children:"Color-scheme specific gray colors gradient from 0 (same as schema color) to 1000 (opposite to schema color) in increments of 100:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-css",children:"--reactodia-color-emphasis-{i}\n"})}),"\n",(0,n.jsx)(o.h3,{id:"content-and-background",children:"Content and Background"}),"\n",(0,n.jsx)(l,{children:(0,n.jsx)(d,{colors:["var(--reactodia-color-content)","var(--reactodia-color-content-inverse)","var(--reactodia-color-content-contrast)"]})}),"\n",(0,n.jsx)(o.p,{children:"Color-scheme specific color for a text-like content, pure inverse for the background, and a contrast (which is suitable for content on top of a background of the named color):"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-css",children:"--reactodia-color-content\r\n--reactodia-color-content-inverse\r\n--reactodia-color-content-contrast\n"})}),"\n",(0,n.jsx)(l,{children:(0,n.jsx)(d,{colors:["var(--reactodia-background-color)","var(--reactodia-background-color-surface)"]})}),"\n",(0,n.jsx)(o.p,{children:"Color-scheme specific color for a background-like layers, and a surface one which can be used for layers placed on top of the main background:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-css",children:"--reactodia-background-color\r\n--reactodia-background-color-surface\n"})}),"\n",(0,n.jsx)(o.h3,{id:"named-colors",children:"Named colors"}),"\n","\n",(0,n.jsx)(o.p,{children:'Named colors can be used to show specific action types for buttons, importance for statuses, etc. The primary color can be specifically used to highlight the "main" action or give a color accent to a UI element:'}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-css",children:"--reactodia-color-{color}-lightest\r\n--reactodia-color-{color}-lighter\r\n--reactodia-color-{color}-light\r\n--reactodia-color-{color}\r\n--reactodia-color-{color}-dark\r\n--reactodia-color-{color}-darker\r\n--reactodia-color-{color}-darkest\n"})}),"\n",(0,n.jsx)(o.p,{children:"Additionally, each color has a contrast foreground (to put on the named color) and a contrast background (to put the named color on):"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-css",children:"--reactodia-color-{color}-contrast-background\r\n--reactodia-color-{color}-contrast-foreground\n"})}),"\n",(0,n.jsxs)(o.h4,{id:"primary-color",children:[(0,n.jsx)(o.code,{children:"primary"})," color"]}),"\n",(0,n.jsx)(l,{children:(0,n.jsx)(g,{color:"primary"})}),"\n",(0,n.jsxs)(o.h4,{id:"secondary-color",children:[(0,n.jsx)(o.code,{children:"secondary"})," color"]}),"\n",(0,n.jsx)(l,{children:(0,n.jsx)(g,{color:"secondary"})}),"\n",(0,n.jsxs)(o.h4,{id:"success-color",children:[(0,n.jsx)(o.code,{children:"success"})," color"]}),"\n",(0,n.jsx)(l,{children:(0,n.jsx)(g,{color:"success"})}),"\n",(0,n.jsxs)(o.h4,{id:"info-color",children:[(0,n.jsx)(o.code,{children:"info"})," color"]}),"\n",(0,n.jsx)(l,{children:(0,n.jsx)(g,{color:"info"})}),"\n",(0,n.jsxs)(o.h4,{id:"warning-color",children:[(0,n.jsx)(o.code,{children:"warning"})," color"]}),"\n",(0,n.jsx)(l,{children:(0,n.jsx)(g,{color:"warning"})}),"\n",(0,n.jsxs)(o.h4,{id:"danger-color",children:[(0,n.jsx)(o.code,{children:"danger"})," color"]}),"\n",(0,n.jsx)(l,{children:(0,n.jsx)(g,{color:"danger"})}),"\n",(0,n.jsx)(o.h2,{id:"text",children:"Text"}),"\n",(0,n.jsx)(o.p,{children:"The following properties allow to customize font family, base size and color:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-css",children:"--reactodia-font-family-base\r\n--reactodia-font-family-monospace\r\n--reactodia-font-size-base\r\n--reactodia-line-height-base\r\n--reactodia-font-color-base\r\n--reactodia-font-color-base-inverse\n"})}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-tsx",metastring:"live",live:!0,children:"function Text() {\r\n    return (\r\n        <Reactodia.WorkspaceRoot>\r\n            <p>\r\n                Normal: The quick brown fox jumps over the lazy dog.\r\n            </p>\r\n            <p style={{fontFamily: 'var(--reactodia-font-family-monospace)'}}>\r\n                Monospace: The quick brown fox jumps over the lazy dog.\r\n            </p>\r\n            <p style={{\r\n                color: 'var(--reactodia-font-color-base-inverse)',\r\n                backgroundColor: 'var(--reactodia-color-gray-800)',\r\n            }}>\r\n                Inverse: The quick brown fox jumps over the lazy dog.\r\n            </p>\r\n        </Reactodia.WorkspaceRoot>\r\n    );\r\n}\n"})}),"\n",(0,n.jsx)(o.h2,{id:"borders",children:"Borders"}),"\n",(0,n.jsx)(o.p,{children:"The following properties allow to customize base border styling, including default border radius for UI elements such as buttons, inputs, panels, etc:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-css",children:"--reactodia-border-width-base\r\n--reactodia-border-radius-base\r\n--reactodia-border-color-base\n"})}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-tsx",metastring:"live",live:!0,children:"function Borders() {\r\n    return <Reactodia.WorkspaceRoot style={{\r\n        maxWidth: 300,\r\n        gap: 5,\r\n        '--reactodia-border-width-base': '2px',\r\n        '--reactodia-border-radius-base': '5px',\r\n    }}>\r\n        <div style={{\r\n            display: 'grid',\r\n            padding: 10,\r\n            justifyContent: 'center',\r\n            borderStyle: 'solid',\r\n            borderWidth: 'var(--reactodia-border-width-base)',\r\n            borderRadius: 'var(--reactodia-border-radius-base)',\r\n            borderColor: 'var(--reactodia-border-color-base)',\r\n        }}>\r\n            Panel\r\n        </div>\r\n        <button type='button'\r\n            className='reactodia-btn reactodia-btn-default'>\r\n            Button\r\n        </button>\r\n        <input type='text'\r\n            className='reactodia-form-control'\r\n            placeholder='Input text here...'\r\n        />\r\n    </Reactodia.WorkspaceRoot>\r\n}\n"})}),"\n",(0,n.jsx)(o.h2,{id:"spacing",children:"Spacing"}),"\n",(0,n.jsx)(o.p,{children:"The following properties allow to customize default spacing between UI elements:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-css",children:"--reactodia-spacing-base\r\n--reactodia-spacing-vertical\r\n--reactodia-spacing-horizontal\n"})}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-tsx",metastring:"live",live:!0,children:"function Spacing() {\r\n    return <Reactodia.WorkspaceRoot>\r\n        <div style={{\r\n            display: 'grid',\r\n            gridTemplateRows: 'repeat(3, min-content)',\r\n            gridTemplateColumns: 'repeat(3, min-content)',\r\n        }}>\r\n            {Array.from({length: 9}, (_, i) =>\r\n                <div key={i} style={{\r\n                    width: 50,\r\n                    height: 50,\r\n                    marginRight: 'var(--reactodia-spacing-horizontal)',\r\n                    marginBottom: 'var(--reactodia-spacing-vertical)',\r\n                    backgroundColor: 'var(--reactodia-color-primary)',\r\n                }} />\r\n            )}\r\n        </div>\r\n    </Reactodia.WorkspaceRoot>\r\n}\n"})}),"\n",(0,n.jsx)(o.h2,{id:"controls",children:"Controls"}),"\n",(0,n.jsx)(o.h3,{id:"buttons",children:"Buttons"}),"\n","\n","\n",(0,n.jsx)(l,{children:(0,n.jsx)(b,{})}),"\n",(0,n.jsx)(o.p,{children:"There are specific CSS properties to define the style of various buttons:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-tsx",metastring:"live",live:!0,children:"function Button() {\r\n    return <Reactodia.WorkspaceRoot>\r\n        <div style={{\r\n            '--reactodia-button-border-radius': 'inherit',\r\n            '--reactodia-button-border-width': 'inherit',\r\n            '--reactodia-button-default-background-color': 'inherit',\r\n            '--reactodia-button-default-background-color-active': 'inherit',\r\n            '--reactodia-button-default-background-color-focus': 'inherit',\r\n            '--reactodia-button-default-border-color': 'inherit',\r\n            '--reactodia-button-default-color': 'inherit',\r\n            '--reactodia-button-default-color-focus': 'inherit',\r\n        }}>\r\n            <button type='button'\r\n                className='reactodia-btn reactodia-btn-default'>\r\n                Button\r\n            </button>\r\n        </div>\r\n    </Reactodia.WorkspaceRoot>\r\n}\n"})}),"\n",(0,n.jsx)(o.h3,{id:"inputs",children:"Inputs"}),"\n","\n",(0,n.jsx)(l,{children:(0,n.jsx)(j,{})}),"\n",(0,n.jsxs)(o.p,{children:["There are specific CSS properties to define the style of various inputs, including ",(0,n.jsx)(o.code,{children:'<input type="text">'})," and ",(0,n.jsx)(o.code,{children:"<select>"}),":"]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-tsx",metastring:"live",live:!0,children:"function Inputs() {\r\n    return (\r\n        <Reactodia.WorkspaceRoot>\r\n            <div style={{\r\n                display: 'flex',\r\n                gap: 5,\r\n                '--reactodia-input-color': 'inherit',\r\n                '--reactodia-input-color-placeholder': 'inherit',\r\n                '--reactodia-input-background-color': 'inherit',\r\n                '--reactodia-input-background-color-disabled': 'inherit',\r\n                '--reactodia-input-border-color': 'inherit',\r\n                '--reactodia-input-border-color-focus': 'inherit',\r\n                '--reactodia-input-border-radius': 'inherit',\r\n                '--reactodia-input-border-width': 'inherit',\r\n            }}>\r\n                <input type='text'\r\n                    className='reactodia-form-control'\r\n                    placeholder='Input text here...'\r\n                />\r\n                <select className='reactodia-form-control'>\r\n                    <option>Option 1</option>\r\n                    <option>Option 2</option>\r\n                    <option>Option 3</option>\r\n                </select>\r\n            </style>\r\n        </Reactodia.WorkspaceRoot>\r\n    );\r\n}\n"})})]})}function y(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(v,{...e})}):v(e)}},28827:(e,o,r)=>{r.r(o),r.d(o,{ReactodiaStyleRoot:()=>a});var n=r(22334),t=r(64922);function a(e){return(0,t.jsx)(n.WorkspaceRoot,{...e})}},16593:(e,o,r)=>{r.d(o,{R:()=>c,x:()=>i});var n=r(77810);const t={},a=n.createContext(t);function c(e){const o=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),n.createElement(a.Provider,{value:o},e.children)}}}]);