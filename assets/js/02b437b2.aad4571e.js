"use strict";(self.webpackChunk_reactodia_reactodia_github_io=self.webpackChunk_reactodia_reactodia_github_io||[]).push([[49817],{1848:(e,t,r)=>{r.d(t,{U:()=>c,y:()=>s});var a=r(34164),o=(r(77810),r(38410)),n=r(18576);const l={inline:"inline_KKeb",fullSize:"fullSize_xfsN"};var i=r(64922);function s(){return(0,i.jsx)(n.A,{children:(0,i.jsx)("meta",{name:"viewport",content:"initial-scale=1, interactive-widget=resizes-content"})})}function c(e){const{fullSize:t,height:r,children:n}=e,s={"--inline-reactodia-height":t?"auto":r};return(0,i.jsx)("div",{className:(0,a.A)(t?l.fullSize:l.inline),style:s,children:(0,i.jsx)(o.A,{children:()=>(0,i.jsx)(i.Fragment,{children:n})})})}},62424:(e,t,r)=>{r.d(t,{V:()=>d});var a,o=r(77810),n=r(43946);function l(){return l=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)({}).hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e},l.apply(null,arguments)}const i=e=>{let{title:t,titleId:r,...n}=e;return o.createElement("svg",l({width:16,height:16,viewBox:"0 0 16 16",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor","aria-labelledby":r},n),t?o.createElement("title",{id:r},t):null,a||(a=o.createElement("path",{d:"M4.708 5.578 2.061 8.224l2.647 2.646-.708.708-3-3V7.87l3-3 .708.708zm7-.708L11 5.578l2.647 2.646L11 10.87l.708.708 3-3V7.87l-3-3zM4.908 13l.894.448 5-10L9.908 3l-5 10z"})))},s={viewSource:"viewSource_fiKn",label:"label_vLkb"};var c=r(64922);function d(e){const{target:t}=e;return(0,c.jsxs)(n.A,{className:s.viewSource,to:t,title:"View source code for the playground page",children:[(0,c.jsx)(i,{width:24,height:24}),(0,c.jsx)("span",{className:s.label,children:"View Source"})]})}},66446:(e,t,r)=>{r.d(t,{j:()=>l});r(77810);var a=r(22334),o=r(2519),n=r(64922);function l(){const{model:e,editor:t,overlay:r}=a.useWorkspace();return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.ToolbarActionOpen,{fileAccept:".json",onSelect:async t=>{const o=new Map;for(const r of e.elements)for(const e of a.iterateEntitiesOf(r))o.set(e.id,e);const n=r.startTask({title:"Importing a layout from file"});try{const r=await t.text(),a=JSON.parse(r);await e.importLayout({dataProvider:e.dataProvider,diagram:a,preloadedElements:o,validateLinks:!0})}catch(l){n.setError(new Error("Failed to load specified file with a diagram layout.",{cause:l}))}finally{n.end()}},children:"Open diagram from file"}),(0,n.jsx)(a.ToolbarActionSave,{mode:"layout",onSelect:()=>{const t=e.exportLayout(),r=JSON.stringify(t),a=new Blob([r],{type:"application/json"}),n=(new Date).toISOString().replaceAll(/[Z\s:-]/g,"");(0,o.saveAs)(a,`reactodia-diagram-${n}.json`)},children:"Save diagram to file"}),t.inAuthoringMode?(0,n.jsx)(a.ToolbarActionSave,{mode:"authoring",onSelect:()=>{const e=t.authoringState;console.log("Authoring state:",e),alert("Please check browser console for result")},children:"Persist changes to data"}):null,(0,n.jsx)(a.ToolbarActionClearAll,{}),(0,n.jsx)(a.ToolbarActionExport,{kind:"exportRaster"}),(0,n.jsx)(a.ToolbarActionExport,{kind:"exportSvg"}),(0,n.jsx)(a.ToolbarActionExport,{kind:"print"})]})}},60335:(e,t,r)=>{r.r(t),r.d(t,{PlaygroundRdfExplorer:()=>c});var a=r(77810),o=r(22334),n=r(90585),l=r(66446),i=r(64922);const s=o.defineLayoutWorker((()=>new Worker(new URL(r.p+r.u(592),r.b))));function c(){const{defaultLayout:e}=o.useWorker(s),[t,r]=a.useState({type:"url",url:"https://reactodia.github.io/resources/orgOntology.ttl"}),[c]=a.useState((()=>new o.EventSource)),{onMount:u}=o.useLoadedWorkspace((async e=>{let{context:r,signal:a}=e;const{model:l}=r;let i;if("url"===t.type){const e=await fetch(t.url,{signal:a});i=await e.text()}else i=t.data;const s=new o.RdfDataProvider;try{s.addGraph((new n.A).parse(i))}catch(d){throw new Error("Error parsing RDF graph data",{cause:d})}await l.importLayout({dataProvider:s,signal:a}),c.trigger("focus",{sectionKey:"elementTypes"})}),[t]);return(0,i.jsx)(o.Workspace,{ref:u,defaultLayout:e,onIriClick:e=>{let{iri:t}=e;return window.open(t)},children:(0,i.jsx)(o.DefaultWorkspace,{menu:(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(d,{onOpen:r}),(0,i.jsx)(l.j,{})]}),searchCommands:c,languages:[{code:"de",label:"Deutsch"},{code:"en",label:"english"},{code:"es",label:"espa\xf1ol"},{code:"ru",label:"\u0440\u0443\u0441\u0441\u043a\u0438\u0439"},{code:"zh",label:"\u6c49\u8bed"}]})})}function d(e){const{onOpen:t}=e;return(0,i.jsx)(o.ToolbarActionOpen,{fileAccept:".ttl",onSelect:async e=>{const r=await e.text();t({type:"data",data:r})},children:"Load RDF (Turtle) data"})}},53216:(e,t,r)=>{r.r(t),r.d(t,{default:()=>s});var a=r(38410),o=r(88320),n=r(1848),l=r(62424),i=r(64922);function s(){return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.y,{}),(0,i.jsxs)(o.A,{title:"Playground: RDF Explorer",noFooter:!0,children:[(0,i.jsx)(a.A,{children:()=>{const{PlaygroundRdfExplorer:e}=r(60335);return(0,i.jsx)(n.U,{fullSize:!0,children:(0,i.jsx)(e,{})})}}),(0,i.jsx)(l.V,{target:"/docs/examples/rdf-explorer"})]})]})}}}]);