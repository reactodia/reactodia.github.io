"use strict";(self.webpackChunk_reactodia_reactodia_github_io=self.webpackChunk_reactodia_reactodia_github_io||[]).push([[49817],{1848:(e,t,a)=>{a.d(t,{U:()=>c,y:()=>s});var o=a(34164),r=(a(77810),a(38410)),n=a(18576);const l={inline:"inline_KKeb",fullSize:"fullSize_xfsN"};var i=a(64922);function s(){return(0,i.jsx)(n.A,{children:(0,i.jsx)("meta",{name:"viewport",content:"initial-scale=1, interactive-widget=resizes-content"})})}function c(e){const{fullSize:t,height:a,children:n}=e,s={"--inline-reactodia-height":t?"auto":a};return(0,i.jsx)("div",{className:(0,o.default)(t?l.fullSize:l.inline),style:s,children:(0,i.jsx)(r.A,{children:()=>(0,i.jsx)(i.Fragment,{children:n})})})}},2369:(e,t,a)=>{a.d(t,{V:()=>d});var o,r=a(77810),n=a(43946);function l(){return l=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var o in a)({}).hasOwnProperty.call(a,o)&&(e[o]=a[o])}return e},l.apply(null,arguments)}const i=({title:e,titleId:t,...a})=>r.createElement("svg",l({xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"currentColor",viewBox:"0 0 16 16","aria-labelledby":t},a),e?r.createElement("title",{id:t},e):null,o||(o=r.createElement("path",{d:"M4.708 5.578 2.061 8.224l2.647 2.646-.708.708-3-3V7.87l3-3zm7-.708L11 5.578l2.647 2.646L11 10.87l.708.708 3-3V7.87zM4.908 13l.894.448 5-10L9.908 3z"}))),s={viewSource:"viewSource_fiKn",label:"label_vLkb"};var c=a(64922);function d(e){const{target:t}=e;return(0,c.jsxs)(n.A,{className:s.viewSource,to:t,title:"View source code for the playground page",children:[(0,c.jsx)(i,{width:24,height:24}),(0,c.jsx)("span",{className:s.label,children:"View Source"})]})}},53216:(e,t,a)=>{a.r(t),a.d(t,{default:()=>s});var o=a(38410),r=a(7225),n=a(1848),l=a(2369),i=a(64922);function s(){return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.y,{}),(0,i.jsxs)(r.A,{title:"Playground: RDF Explorer",noFooter:!0,children:[(0,i.jsx)(o.A,{children:()=>{const{PlaygroundRdfExplorer:e}=a(60335);return(0,i.jsx)(n.U,{fullSize:!0,children:(0,i.jsx)(e,{})})}}),(0,i.jsx)(l.V,{target:"/docs/examples/rdf-explorer"})]})]})}},60335:(e,t,a)=>{a.r(t),a.d(t,{PlaygroundRdfExplorer:()=>c});var o=a(77810),r=a(96333),n=a(90585),l=a(66446),i=a(64922);const s=r.defineLayoutWorker((()=>new Worker(new URL(a.p+a.u(89206),a.b))));function c(){const{defaultLayout:e}=r.useWorker(s),[t,a]=o.useState({type:"url",url:"https://reactodia.github.io/resources/orgOntology.ttl"}),{onMount:c}=r.useLoadedWorkspace((async({context:e,signal:a})=>{const{model:o,getCommandBus:l}=e;let i;if("url"===t.type){const e=await fetch(t.url,{signal:a});i=await e.text()}else i=t.data;const s=new r.RdfDataProvider;try{s.addGraph((new n.A).parse(i))}catch(c){throw new Error("Error parsing RDF graph data",{cause:c})}await o.importLayout({dataProvider:s,signal:a}),l(r.UnifiedSearchTopic).trigger("focus",{sectionKey:"elementTypes"})}),[t]);return(0,i.jsx)(r.Workspace,{ref:c,defaultLayout:e,children:(0,i.jsx)(r.DefaultWorkspace,{menu:(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(d,{onOpen:a}),(0,i.jsx)(l.j,{})]}),languages:[{code:"de",label:"Deutsch"},{code:"en",label:"English"},{code:"es",label:"Espa\xf1ol"},{code:"fr",label:"Fran\xe7ais"},{code:"hi",label:"\u0939\u093f\u0928\u094d\u0926\u0940"},{code:"it",label:"Italiano"},{code:"ja",label:"\u65e5\u672c\u8a9e"},{code:"pt",label:"portugu\xeas"},{code:"ru",label:"\u0420\u0443\u0441\u0441\u043a\u0438\u0439"},{code:"zh",label:"\u6c49\u8bed"}]})})}function d(e){const{onOpen:t}=e;return(0,i.jsx)(r.ToolbarActionOpen,{fileAccept:".ttl",onSelect:async e=>{const a=await e.text();t({type:"data",data:a})},children:"Load RDF (Turtle) data"})}},66446:(e,t,a)=>{a.d(t,{j:()=>l});a(77810);var o=a(96333),r=a(2519),n=a(64922);function l(){const{model:e,editor:t,overlay:a}=o.useWorkspace();return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.ToolbarActionOpen,{hotkey:"Mod+O",fileAccept:".json",onSelect:async t=>{const r=new Map;for(const a of e.elements)for(const e of o.iterateEntitiesOf(a))r.set(e.id,e);const n=a.startTask({title:"Importing a layout from file"});try{const a=await t.text(),o=JSON.parse(a);await e.importLayout({dataProvider:e.dataProvider,diagram:o,preloadedElements:r,validateLinks:!0})}catch(l){n.setError(new Error("Failed to load specified file with a diagram layout.",{cause:l}))}finally{n.end()}},children:"Open diagram from file"}),(0,n.jsx)(o.ToolbarActionSave,{mode:"layout",hotkey:"Mod+S",onSelect:()=>{const t=e.exportLayout(),a=JSON.stringify(t),o=new Blob([a],{type:"application/json"}),n=(new Date).toISOString().replaceAll(/[Z\s:-]/g,"");(0,r.saveAs)(o,`reactodia-diagram-${n}.json`)},children:"Save diagram to file"}),t.inAuthoringMode?(0,n.jsx)(o.ToolbarActionSave,{mode:"authoring",onSelect:()=>{const e=t.authoringState;console.log("Authoring state:",e),alert("Please check browser console for result")},children:"Persist changes to data"}):null,(0,n.jsx)(o.ToolbarActionClearAll,{}),(0,n.jsx)(o.ToolbarActionExport,{kind:"exportRaster"}),(0,n.jsx)(o.ToolbarActionExport,{kind:"exportSvg"}),(0,n.jsx)(o.ToolbarActionExport,{kind:"print",hotkey:"Mod+P"})]})}}}]);